resources:
  App\Entity\Collection:
    collectionOperations:
      get:
        method: get
        normalization_context:
          groups: ['collection', 'light_movie']
      post:
        method: post
        access_control: is_granted('ROLE_USER')
    itemOperations:
      get:
        method: get
        normalization_context:
          groups: ['collection', 'light_movie']
      put:
        access_control: object.getUser() == user
      delete:
        access_control: object.getUser() == user
      get_movies:
        method: GET
        path: /collections/{id}/movies
        controller: App\Controller\Collection\GetMovies
        normalization_context:
          groups: ['light_movie']
  App\Entity\CollectionItem:
    collectionOperations:
      add_movie:
        method: post
        path: /collections/movies
        controller: App\Controller\Collection\AddMovie
        swagger_context:
          summary: Add a movie to a collection
          response:
            204:
              description: "Movie successfully added to collection"
            403:
              description: "Access denied"
    itemOperations:
      get: ~